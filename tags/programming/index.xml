<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Janos Miko</title><link>https://janosmiko.com/tags/programming/</link><description>Recent content in programming on Janos Miko</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; Janos Miko</copyright><lastBuildDate>Sat, 25 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://janosmiko.com/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Functional Options in Go</title><link>https://janosmiko.com/blog/2023-02-25-golang-functional-options/</link><pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate><guid>https://janosmiko.com/blog/2023-02-25-golang-functional-options/</guid><description>&lt;p>Golang provides a fantastic way of writing functions called Functional Options. This is a design pattern that allows
callers to pass a set of options to a function, each represented by a function. Super flexible, and easy to use.&lt;/p></description></item></channel></rss>